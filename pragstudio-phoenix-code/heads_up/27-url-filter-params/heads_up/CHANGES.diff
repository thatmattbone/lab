--- a/lib/heads_up_web/live/incident_live/index.ex
+++ b/lib/heads_up_web/live/incident_live/index.ex
@@ -5,13 +5,17 @@ defmodule HeadsUpWeb.IncidentLive.Index do
   import HeadsUpWeb.CustomComponents
 
   def mount(_params, _session, socket) do
+    {:ok, socket}
+  end
+
+  def handle_params(params, _uri, socket) do
     socket =
       socket
       |> assign(:page_title, "Incidents")
-      |> assign(:form, to_form(%{}))
-      |> stream(:incidents, Incidents.list_incidents())
+      |> assign(:form, to_form(params))
+      |> stream(:incidents, Incidents.filter_incidents(params))
 
-    {:ok, socket}
+    {:noreply, socket}
   end
 
   def render(assigns) do
@@ -60,6 +64,9 @@ defmodule HeadsUpWeb.IncidentLive.Index do
           "Priority: Low to High": "priority_desc"
         ]}
       />
+      <.link navigate={~p"/incidents"}>
+        Reset
+      </.link>
     </.form>
     """
   end
@@ -85,10 +92,12 @@ defmodule HeadsUpWeb.IncidentLive.Index do
   end
 
   def handle_event("filter", params, socket) do
-    socket =
-      socket
-      |> assign(:form, to_form(params))
-      |> stream(:incidents, Incidents.filter_incidents(params), reset: true)
+    params =
+      params
+      |> Map.take(~w(q status sort_by))
+      |> Map.reject(fn {_, v} -> v == "" end)
+
+    socket = push_navigate(socket, to: ~p"/incidents?#{params}")
 
     {:noreply, socket}
   end
