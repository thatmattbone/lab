--- a/lib/heads_up/incidents.ex
+++ b/lib/heads_up/incidents.ex
@@ -1,11 +1,9 @@
-defmodule HeadsUp.Incident do
-  defstruct [:id, :name, :description, :priority, :status, :image_path]
-end
-
 defmodule HeadsUp.Incidents do
+  alias HeadsUp.Incidents.Incident
+
   def list_incidents do
     [
-      %HeadsUp.Incident{
+      %Incident{
         id: 1,
         name: "Lost Dog",
         description: "A friendly dog is wandering around the neighborhood. 🐶",
@@ -13,7 +11,7 @@ defmodule HeadsUp.Incidents do
         status: :pending,
         image_path: "/images/lost-dog.jpg"
       },
-      %HeadsUp.Incident{
+      %Incident{
         id: 2,
         name: "Flat Tire",
         description: "Our beloved ice cream truck has a flat tire! 🛞",
@@ -21,7 +19,7 @@ defmodule HeadsUp.Incidents do
         status: :resolved,
         image_path: "/images/flat-tire.jpg"
       },
-      %HeadsUp.Incident{
+      %Incident{
         id: 3,
         name: "Bear In The Trash",
         description: "A curious bear is digging through the trash! 🐻",
new file mode 100644
--- /dev/null
+++ b/lib/heads_up/incidents/incident.ex
@@ -0,0 +1,21 @@
+defmodule HeadsUp.Incidents.Incident do
+  use Ecto.Schema
+  import Ecto.Changeset
+
+  schema "incidents" do
+    field :name, :string
+    field :priority, :integer, default: 1
+    field :status, Ecto.Enum, values: [:pending, :resolved, :canceled], default: :pending
+    field :description, :string
+    field :image_path, :string, default: "/images/placeholder.jpg"
+
+    timestamps(type: :utc_datetime)
+  end
+
+  @doc false
+  def changeset(incident, attrs) do
+    incident
+    |> cast(attrs, [:name, :description, :priority, :status, :image_path])
+    |> validate_required([:name, :description, :priority, :status, :image_path])
+  end
+end
--- a/lib/heads_up_web/live/incident_live/index.ex
+++ b/lib/heads_up_web/live/incident_live/index.ex
@@ -30,7 +30,7 @@ defmodule HeadsUpWeb.IncidentLive.Index do
     """
   end
 
-  attr :incident, HeadsUp.Incident, required: true
+  attr :incident, HeadsUp.Incidents.Incident, required: true
 
   def incident_card(assigns) do
     ~H"""
new file mode 100644
--- /dev/null
+++ b/priv/repo/migrations/20241107212613_create_incidents.exs
@@ -0,0 +1,15 @@
+defmodule HeadsUp.Repo.Migrations.CreateIncidents do
+  use Ecto.Migration
+
+  def change do
+    create table(:incidents) do
+      add :name, :string
+      add :description, :text
+      add :priority, :integer
+      add :status, :string
+      add :image_path, :string
+
+      timestamps(type: :utc_datetime)
+    end
+  end
+end
