new file mode 100644
--- /dev/null
+++ b/lib/heads_up/incidents.ex
@@ -0,0 +1,34 @@
+defmodule HeadsUp.Incident do
+  defstruct [:id, :name, :description, :priority, :status, :image_path]
+end
+
+defmodule HeadsUp.Incidents do
+  def list_incidents do
+    [
+      %HeadsUp.Incident{
+        id: 1,
+        name: "Lost Dog",
+        description: "A friendly dog is wandering around the neighborhood. üê∂",
+        priority: 2,
+        status: :pending,
+        image_path: "/images/lost-dog.jpg"
+      },
+      %HeadsUp.Incident{
+        id: 2,
+        name: "Flat Tire",
+        description: "Our beloved ice cream truck has a flat tire! üõû",
+        priority: 1,
+        status: :resolved,
+        image_path: "/images/flat-tire.jpg"
+      },
+      %HeadsUp.Incident{
+        id: 3,
+        name: "Bear In The Trash",
+        description: "A curious bear is digging through the trash! üêª",
+        priority: 1,
+        status: :canceled,
+        image_path: "/images/bear-in-trash.jpg"
+      }
+    ]
+  end
+end
new file mode 100644
--- /dev/null
+++ b/lib/heads_up_web/live/incident_live/index.ex
@@ -0,0 +1,31 @@
+defmodule HeadsUpWeb.IncidentLive.Index do
+  use HeadsUpWeb, :live_view
+
+  alias HeadsUp.Incidents
+
+  def mount(_params, _session, socket) do
+    socket = assign(socket, :incidents, Incidents.list_incidents())
+    {:ok, socket}
+  end
+
+  def render(assigns) do
+    ~H"""
+    <div class="incident-index">
+      <div class="incidents">
+        <div :for={incident <- @incidents} class="card">
+          <img src={incident.image_path} />
+          <h2><%= incident.name %></h2>
+          <div class="details">
+            <div class="badge">
+              <%= incident.status %>
+            </div>
+            <div class="priority">
+              <%= incident.priority %>
+            </div>
+          </div>
+        </div>
+      </div>
+    </div>
+    """
+  end
+end
--- a/lib/heads_up_web/router.ex
+++ b/lib/heads_up_web/router.ex
@@ -32,6 +32,7 @@ defmodule HeadsUpWeb.Router do
     get "/tips", TipController, :index
     get "/tips/:id", TipController, :show
     live "/effort", EffortLive
+    live "/incidents", IncidentLive.Index
   end
 
   # Other scopes may use custom stacks.
